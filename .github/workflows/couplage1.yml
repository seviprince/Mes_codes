# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: couplage1

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install numpy scipy matplotlib ipython jupyter pandas sympy nose
        python setup.py develop
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: couplage.py run
      run: |
        cd examples/mod1D
        python couplage.py True 0 "SummerProdECS"
        python couplage.py False 0 "SummerProd"
        python couplage.py True 1 "SummerProdChauffageECS"
        python couplage.py False 1 "SummerProdChauffage"
        python couplage.py True 2 "AllYearProdChauffageECS"
        python couplage.py False 2 "AllYearProdChauffage"
        python couplage.py True 3 "ProdIfRayAbove250ChauffageECS"
        python couplage.py False 3 "ProdIfRayAbove250Chauffage"
        mkdir figures
        mv *.png figures/
    - name: Upload results
      uses: actions/upload-artifact@v1
      with:
        name: figures
        path: 'examples/mod1D/figures'
